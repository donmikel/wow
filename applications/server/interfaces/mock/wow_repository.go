// Code generated by moq; DO NOT EDIT.
// gitlab.diskarte.net/engineering/moqc fork from github.com/matryer/moq

package mock

import (
	"sync"

	"github.com/donmikel/wow/applications/server/interfaces"
)

var _ interfaces.WOWRepository = &WOWRepository{}

// WOWRepository is a mock implementation of interfaces.WOWRepository.
type WOWRepository struct {
	// GetQuoteFn mocks the GetQuote method.
	GetQuoteFn func(sel func(len int) int) string

	// calls tracks calls to the methods.
	calls struct {
		// GetQuote holds details about calls to the GetQuote method.
		GetQuote []struct {
			Sel func(len int) int
		}
	}
	lockGetQuote sync.RWMutex
}

// GetQuote calls GetQuoteFn.
func (mock *WOWRepository) GetQuote(sel func(len int) int) string {
	callInfo := struct {
		Sel func(len int) int
	}{
		Sel: sel,
	}
	mock.lockGetQuote.Lock()
	mock.calls.GetQuote = append(mock.calls.GetQuote, callInfo)
	mock.lockGetQuote.Unlock()
	if mock.GetQuoteFn == nil {
		var (
			out1 string
		)
		return out1
	}
	return mock.GetQuoteFn(sel)
}

// GetQuoteCalls gets all the calls that were made to GetQuote.
// Check the length with:
//
//	len(mockedWOWRepository.GetQuoteCalls())
func (mock *WOWRepository) GetQuoteCalls() []struct {
	Sel func(len int) int
} {
	var calls []struct {
		Sel func(len int) int
	}
	mock.lockGetQuote.RLock()
	calls = mock.calls.GetQuote
	mock.lockGetQuote.RUnlock()
	return calls
}
